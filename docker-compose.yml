version: "3"
services:
  janus-gateway:
    image: "canyan/janus-gateway:latest"
    command: ["/usr/local/bin/janus", "-F", "/usr/local/etc/janus"]
    ports:
      - 8088
      - 7088

    # volumes:
      # - "./janus/janus.jcfg:/usr/local/etc/janus/janus.jcfg"
      # - "./janus/janus.transport.http.jcfg:/usr/local/etc/janus/janus.transport.http.jcfg"
      # - "./etc/janus/janus.eventhandler.sampleevh.jcfg:/usr/local/etc/janus/janus.eventhandler.sampleevh.jcfg"
    # restart: always
  ui:
    build: "leon-ClientSide/"
    ports:
      - 3000
    volumes:
      - ./leon-ClientSide:/code
    # command: npm run dev



  redisdb:
    extends:
      file: Leon-Serverside/docker-compose.yml
      service: redisdb

  postgresdb:
    extends:
      file: Leon-Serverside/docker-compose.yml
      service: postgresdb

  backend:
    extends:
      file: Leon-Serverside/docker-compose.yml
      service: server
    ports:
      - 3333
    depends_on:
      - redisdb
      - postgresdb


  auth-service:
    build: "face_verification/"
    command: ["python", "./exam/reciving_video.py"]
    volumes: 
        - ./face_verification:/code
  proxy:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/etc/nginx/logs
      - ./nginx/cert/fullchain.pem:/etc/nginx/fullchain.pem
      - ./nginx/cert/privkey.pem:/etc/nginx/privkey.pem
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - ui
  text-classification:
    build: "Text_Classifier/"
    command: ["bash", "./start.sh"]
    volumes:
        - ./Text_Classifier:/code

volumes:
  postgresdb:
